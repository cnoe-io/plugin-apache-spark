apiVersion: argoproj.io/v1alpha1
kind: Workflow
metadata:
  name: "spark-${{values.name}}"
  namespace: "${{values.namespace}}"
  labels:
    backstage.io/component-id: "${{values.name}}"
spec:
  arguments: {}
  entrypoint: demo-workflow
  serviceAccountName: argo-workflows
  workflowMetadata:
    labels:
      backstage.io/component-id: "${{values.name}}"
  templates:
    - name: demo-workflow
      steps:
        - - name: prepare-resources
            template: prepare-resources
        - - name: run-sparkapp
            template: run-sparkapp
        - - name: cleanup-resources
            template: cleanup-resources
          - name: notify-users
            template: cleanup-resources
    - name: prepare-resources
      container:
        image: docker/whalesay
        command: [ sleep ]
        args: [ "10" ]
    - name: run-sparkapp
      resource:
        action: create
        setOwnerReference: true
        successCondition: status.applicationState.state == COMPLETED
        failureCondition: status.applicationState.state in (FAILED, ERROR)
        manifest: |
          ${{values.manifest | dump}}
    - name: cleanup-resources
      container:
        image: docker/whalesay
        command: [ sleep ]
        args: [ "5" ]
